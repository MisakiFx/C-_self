#include <iostream>
using namespace std;
/*
单向链表(forward_list)
1、单向链表每个节点只有指向下个结点的指针，没有简单的方法来获取一个节点的前驱
2、未定义insert、emolace和erase操作，而定义了insert_after、emplace_after和rease_after操作煤气参数与list的insert、emplace和erase相同，
但并不是插入或删除迭代器p1所指的元素，而是对p1所指元素之后的节点进行操作
3、不支持size操作 
*/
/*
数组(array)
1、是对内置数组的封装，提供了更安全，更方便的使用数组的方式
2、array的对象的大小是固定的，定义时除了需要指定元素类型，还需要指定容器大小。
3、不能动态的改变容器大小 
*/
/*
STL所提供的顺序容器各有所长也各有所短，我们在编写程序时应当根据我们对容器所需要执行的操作来决定选择哪一种容器。
如果需要执行大量的随机访问操作，而且当扩展容器时只需要向容器尾部加入新的元素，就应当选择向量容器vector；
如果需要少量的随机访问操作，需要在容器两端插入或删除元素，则应当选择双端队列容器deque；
如果不需要对容器进行随机访问，但是需要在中间位置插入或者删除元素，就应当选择列表容器list或forward_list；
如果需要数组，array相对于内置数组类型而言，是一种更安全、更容易使用的数组类型。
*/
int main()
{
	
}
